MPQCBasis.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCBasis.c:	mpqcBasis.name = g_strdup("3-21G");
MPQCBasis.c:		atomsList = g_list_append(atomsList, atom->symbol);
MPQCBasis.c:	combo = create_combo(list, nlist, TRUE, -1, -1);
MPQCBasis.c:	entry = GTK_COMBO (combo)->entry;
MPQCBasis.c:	if(GTK_IS_COMBO(comboMethod)) entryMethod = GTK_COMBO(comboMethod)->entry;
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCBasis.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCBasis.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCBasisLibrary.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCBasisLibrary.c:static gint selectedRow = -1;
MPQCBasisLibrary.c:	gint atomNumber = -1;
MPQCBasisLibrary.c:	atomNumber = -1;
MPQCBasisLibrary.c:  	if (event->type == GDK_BUTTON_PRESS && ((GdkEventButton *) event)->button != 3)
MPQCBasisLibrary.c:		gint row = -1;
MPQCBasisLibrary.c:		row = (event->y -clist->voffset)/(clist->row_height + 1);
MPQCBasisLibrary.c:		if (row >= clist->rows)
MPQCBasisLibrary.c:			row = -1;
MPQCBasisLibrary.c:		gtk_clist_select_row(clist,row,-1);
MPQCBasisLibrary.c:  	if (event->type == GDK_BUTTON_PRESS && ((GdkEventButton *) event)->button == 3)
MPQCBasisLibrary.c:		gint row = -1;
MPQCBasisLibrary.c:		row = (event->y -clist->voffset)/(clist->row_height + 1);
MPQCBasisLibrary.c:  		if (row >= clist->rows)
MPQCBasisLibrary.c:			row = -1;
MPQCBasisLibrary.c:  			gtk_clist_select_row(clist,row,-1);
MPQCBasisLibrary.c:			if(data && data->basisNumber<0)
MPQCBasisLibrary.c:			if(data && data->basisNumber>=0)
MPQCBasisLibrary.c:        	gtk_menu_popup(GTK_MENU(Menu), NULL, NULL, NULL, NULL,bevent->button, bevent->time);
MPQCBasisLibrary.c:	dataTree->atomNumber = atomNumber;
MPQCBasisLibrary.c:	dataTree->basisNumber = basisNumber;
MPQCBasisLibrary.c:	gint nAll = (GTK_CTREE (CTree)->clist).rows;
MPQCBasisLibrary.c:		if(data && data->basisNumber<0)
MPQCBasisLibrary.c:	gtk_clist_freeze(&((GTK_CTREE (CTree)->clist))); 
MPQCBasisLibrary.c:		if(data && data->basisNumber<0)
MPQCBasisLibrary.c:	gtk_clist_thaw(&((GTK_CTREE (CTree)->clist)));
MPQCBasisLibrary.c:	if(selected_row>=0 && selected_row<=(GTK_CTREE(CTree)->clist).rows)
MPQCBasisLibrary.c:		gtk_clist_moveto(&((GTK_CTREE (CTree)->clist)),selected_row,0,0.5,0.5);
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	for(i=basisNumber;i<numberOfBasis-1;i++)
MPQCBasisLibrary.c:	mpqcBasis.atoms[atomNumber].numberOfBasis--;	
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	for(i=atomNumber;i<numberOfAtoms-1;i++)
MPQCBasisLibrary.c:	mpqcBasis.numberOfAtoms--;	
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	atomNumber = -1;
MPQCBasisLibrary.c:	basisNumber = -1;
MPQCBasisLibrary.c:		atomNumber = data->atomNumber;
MPQCBasisLibrary.c:		basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	atoms[numberOfAtoms-1].symbol = symbol;
MPQCBasisLibrary.c:	atoms[numberOfAtoms-1].numberOfBasis = 0;
MPQCBasisLibrary.c:	atoms[numberOfAtoms-1].basis = NULL;
MPQCBasisLibrary.c:		MPQCAtom t = mpqcBasis.atoms[numberOfAtoms-1];
MPQCBasisLibrary.c:		for(i=numberOfAtoms-1;i>atomNumber;i--)
MPQCBasisLibrary.c:			mpqcBasis.atoms[i] = mpqcBasis.atoms[i-1];
MPQCBasisLibrary.c:  Table = gtk_table_new(LigneT-1,ColonneT,TRUE);
MPQCBasisLibrary.c:  for ( i = 0;i<LigneT-1;i++)
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->vbox), frame);
MPQCBasisLibrary.c:	Entry = create_label_entry(hbox," Atom Symbol : ",-1,-1); 
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	basis[numberOfBasis-1].basisName = basisName;
MPQCBasisLibrary.c:		MPQCOneBasis t = mpqcBasis.atoms[atomNumber].basis[numberOfBasis-1];
MPQCBasisLibrary.c:		for(i=numberOfBasis-1;i>basisNumber;i--)
MPQCBasisLibrary.c:			mpqcBasis.atoms[atomNumber].basis[i-1];
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->vbox), frame);
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	atomNumber = data->atomNumber;
MPQCBasisLibrary.c:	basisNumber = data->basisNumber;
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->vbox), frame);
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	gtk_box_pack_start_defaults(GTK_BOX(GTK_DIALOG(WinDlg)->action_area), Button);
MPQCBasisLibrary.c:	if(data && data->atomNumber>=0 && data->basisNumber>=0)
MPQCBasisLibrary.c:  		if (event && event->type == GDK_2BUTTON_PRESS && ((GdkEventButton *) event)->button == 1)
MPQCBasisLibrary.c:	textes[1] = g_strdup(mpqcOneBasis->basisName);
MPQCBasisLibrary.c:	dataTree = newDataMPQCTree(atomNumber,-1);
MPQCBasisLibrary.c:		/* printf("%s\n",Template->residueTemplates[i].residueName);*/
MPQCBasisLibrary.c:	gtk_clist_freeze(&((GTK_CTREE (CTree)->clist))); 
MPQCBasisLibrary.c:	gtk_clist_clear(&((GTK_CTREE (CTree)->clist))); 
MPQCBasisLibrary.c:	gtk_clist_thaw(&((GTK_CTREE (CTree)->clist)));
MPQCBasisLibrary.c:	gtk_clist_column_titles_passive (&(GTK_CTREE(CTree)->clist));
MPQCBasisLibrary.c:		gtk_clist_set_column_resizeable(&(GTK_CTREE(CTree)->clist),i,TRUE);
MPQCBasisLibrary.c:		gtk_clist_set_column_min_width(&(GTK_CTREE(CTree)->clist),i,listWidths[i]*Factor);
MPQCBasisLibrary.c:		gtk_clist_set_column_width(&(GTK_CTREE(CTree)->clist),i,listWidths[i]*Factor);
MPQCBasisLibrary.c:	pixmap_ouvert = gdk_pixmap_create_from_xpm_d(win->window, 
MPQCBasisLibrary.c:	pixmap_ferme = gdk_pixmap_create_from_xpm_d(win->window,
MPQCBasisLibrary.c:	pixmap_feuille = gdk_pixmap_create_from_xpm_d(win->window,
MPQCBasisLibrary.c:    	gtk_signal_connect(GTK_OBJECT(&((GTK_CTREE (CTree)->clist))), "select_row",(GtkSignalFunc)selectionBasis,NULL);
MPQCBasisLibrary.c:	gtk_signal_connect(GTK_OBJECT ( &(GTK_CTREE (CTree)->clist)), "button_press_event",
MPQC.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQC.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQC.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQC.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQC.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, "\n",-1);
MPQC.c:	gtk_window_set_title(&GTK_DIALOG(Wins)->window,"MPQC input");
MPQC.c:	gtk_box_pack_start (GTK_BOX( GTK_DIALOG(Wins)->vbox), table, FALSE, TRUE, 5);
MPQC.c:	gtk_box_pack_start (GTK_BOX( GTK_DIALOG(Wins)->action_area), button, FALSE, TRUE, 5);
MPQC.c:	gtk_box_pack_start (GTK_BOX( GTK_DIALOG(Wins)->action_area), button, FALSE, TRUE, 5);
MPQCFunctionals.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCFunctionals.c:	functionals[PBEC].comment = g_strdup("Perdew-Burke-Ernzerhof (PBE) correlation functional.");
MPQCFunctionals.c:	functionals[PW91C].comment = g_strdup("Perdew-Wang 1991 correlation functional");
MPQCFunctionals.c:	functionals[HFX].comment = g_strdup("Hartree-Fock Exchange");
MPQCFunctionals.c:	functionals[PBEX].comment = g_strdup("Perdew-Burke-Ernzerhof (PBE) exchange functional");
MPQCFunctionals.c:	functionals[PW86X].comment = g_strdup("Perdew-Wang 1986 (PW86) Exchange functiona");
MPQCFunctionals.c:	functionals[PW91X].comment = g_strdup("Perdew-Wang 1991 exchange functional");
MPQCFunctionals.c:	functionals[mPW91_B88X].comment = g_strdup("modified 1991 Perdew-Wang exchange functional");
MPQCFunctionals.c:	functionals[mPW91_PW91X].comment = g_strdup("modified 1991 Perdew-Wang exchange functional");
MPQCFunctionals.c:	functionals[mPW91_mPW91X].comment = g_strdup("modified 1991 Perdew-Wang exchange functional");
MPQCFunctionals.c:	gtk_window_set_title(&GTK_DIALOG(win)->window,"MPQC Sum Density functionals");
MPQCFunctionals.c:	gtk_box_pack_start (GTK_BOX( GTK_DIALOG(win)->vbox), table, FALSE, TRUE, 5);
MPQCFunctionals.c:	gtk_box_pack_start (GTK_BOX( GTK_DIALOG(win)->action_area), button, FALSE, TRUE, 5);
MPQCFunctionals.c:  	gtk_box_pack_end (GTK_BOX( GTK_DIALOG(win)->action_area), button, FALSE, TRUE, 5);  
MPQCGuessWaveFunction.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCGuessWaveFunction.c:	mpqcGuessWaveFunction.basis = g_strdup("STO-3G");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Closed Shell Hartree-Fock");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Restricted Open Shell Hartree-Fock");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Closed Shell Kohn-Sham");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Restricted Open Shell Kohn-Sham ");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Unrestricted Hartree-Fock");
MPQCGuessWaveFunction.c:  		glistLabel = g_list_append(glistLabel,"Unrestricted Kohn-Sham ");
MPQCGuessWaveFunction.c:		if(strcmp((gchar*)glistM->data,method)==0)
MPQCGuessWaveFunction.c:			gtk_label_set_text(GTK_LABEL(labelMethod),(gchar*)glistL->data);
MPQCGuessWaveFunction.c:		glistM = glistM->next;
MPQCGuessWaveFunction.c:		glistL = glistL->next;
MPQCGuessWaveFunction.c:	gint ne = mpqcMolecule.numberOfValenceElectrons - mpqcGuessWaveFunction.totalCharge;
MPQCGuessWaveFunction.c:	nlist = mpqcMolecule.numberOfValenceElectrons*2-2+1;
MPQCGuessWaveFunction.c:	for(i=1;i<nlist-1;i+=2)
MPQCGuessWaveFunction.c:		sprintf(list[i+1],"%d",-k);
MPQCGuessWaveFunction.c:		gint ne = mpqcMolecule.numberOfValenceElectrons - mpqcGuessWaveFunction.totalCharge;
MPQCGuessWaveFunction.c:	combo = create_combo(list, nlist, TRUE, -1, -1);
MPQCGuessWaveFunction.c:	entry = GTK_COMBO (combo)->entry;
MPQCGuessWaveFunction.c:	entrySpinMultiplicity  = GTK_COMBO (comboSpinMultiplicity)->entry;
MPQCGuessWaveFunction.c:  	if(GTK_TOGGLE_BUTTON (button)->active)
MPQCGuessWaveFunction.c:		gtk_object_set_data (GTK_OBJECT (GTK_COMBO(comboCharge)->entry), "ComboSpinMultiplicity", comboSpinMultiplicity);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCGuessWaveFunction.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCGuessWaveFunction.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCLib.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCLib.c:				if(strcmp(l->data,symb)==0)
MPQCLib.c:				l = l->next;
MPQCLib.c:					nbas = -1;
MPQCLib.c:			if(nbas == -1) break;
MPQCLib.c:	fprintf(file,"H STO-2G \n");
MPQCLib.c:	fprintf(file,"H STO-3G \n");
MPQCLib.c:	fprintf(file,"H STO-3G* \n");
MPQCLib.c:	fprintf(file,"H STO-6G \n");
MPQCLib.c:	fprintf(file,"H 3-21G \n");
MPQCLib.c:	fprintf(file,"H 3-21G* \n");
MPQCLib.c:	fprintf(file,"H 3-21++G \n");
MPQCLib.c:	fprintf(file,"H 3-21++G* \n");
MPQCLib.c:	fprintf(file,"H 4-31G \n");
MPQCLib.c:	fprintf(file,"H 4-31G* \n");
MPQCLib.c:	fprintf(file,"H 4-31G** \n");
MPQCLib.c:	fprintf(file,"H 6-31G \n");
MPQCLib.c:	fprintf(file,"H 6-31G* \n");
MPQCLib.c:	fprintf(file,"H 6-31G** \n");
MPQCLib.c:	fprintf(file,"H 6-31+G* \n");
MPQCLib.c:	fprintf(file,"H 6-31++G \n");
MPQCLib.c:	fprintf(file,"H 6-31++G* \n");
MPQCLib.c:	fprintf(file,"H 6-31++G** \n");
MPQCLib.c:	fprintf(file,"H 6-311G \n");
MPQCLib.c:	fprintf(file,"H 6-311G* \n");
MPQCLib.c:	fprintf(file,"H 6-311G** \n");
MPQCLib.c:	fprintf(file,"H 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"H 6-311++G** \n");
MPQCLib.c:	fprintf(file,"H 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"H 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"H cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"H cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"H cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"H cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"H aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"H aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"H aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"H aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"He STO-2G \n");
MPQCLib.c:	fprintf(file,"He STO-3G \n");
MPQCLib.c:	fprintf(file,"He STO-3G* \n");
MPQCLib.c:	fprintf(file,"He STO-6G \n");
MPQCLib.c:	fprintf(file,"He 3-21G \n");
MPQCLib.c:	fprintf(file,"He 3-21G* \n");
MPQCLib.c:	fprintf(file,"He 3-21++G \n");
MPQCLib.c:	fprintf(file,"He 3-21++G* \n");
MPQCLib.c:	fprintf(file,"He 4-31G \n");
MPQCLib.c:	fprintf(file,"He 4-31G* \n");
MPQCLib.c:	fprintf(file,"He 4-31G** \n");
MPQCLib.c:	fprintf(file,"He 6-31G \n");
MPQCLib.c:	fprintf(file,"He 6-31G* \n");
MPQCLib.c:	fprintf(file,"He 6-31G** \n");
MPQCLib.c:	fprintf(file,"He 6-31+G* \n");
MPQCLib.c:	fprintf(file,"He 6-31++G \n");
MPQCLib.c:	fprintf(file,"He 6-31++G* \n");
MPQCLib.c:	fprintf(file,"He 6-31++G** \n");
MPQCLib.c:	fprintf(file,"He 6-311G \n");
MPQCLib.c:	fprintf(file,"He 6-311G* \n");
MPQCLib.c:	fprintf(file,"He 6-311G** \n");
MPQCLib.c:	fprintf(file,"He 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"He 6-311++G** \n");
MPQCLib.c:	fprintf(file,"He 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"He 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"He cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"He cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"He cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"He cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"He aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"He aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"He aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"He aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Li STO-2G \n");
MPQCLib.c:	fprintf(file,"Li STO-3G \n");
MPQCLib.c:	fprintf(file,"Li STO-3G* \n");
MPQCLib.c:	fprintf(file,"Li STO-6G \n");
MPQCLib.c:	fprintf(file,"Li 3-21G \n");
MPQCLib.c:	fprintf(file,"Li 3-21G* \n");
MPQCLib.c:	fprintf(file,"Li 3-21++G \n");
MPQCLib.c:	fprintf(file,"Li 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Li 4-31G \n");
MPQCLib.c:	fprintf(file,"Li 4-31G* \n");
MPQCLib.c:	fprintf(file,"Li 4-31G** \n");
MPQCLib.c:	fprintf(file,"Li 6-31G \n");
MPQCLib.c:	fprintf(file,"Li 6-31G* \n");
MPQCLib.c:	fprintf(file,"Li 6-31G** \n");
MPQCLib.c:	fprintf(file,"Li 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Li 6-31++G \n");
MPQCLib.c:	fprintf(file,"Li 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Li 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Li 6-311G \n");
MPQCLib.c:	fprintf(file,"Li 6-311G* \n");
MPQCLib.c:	fprintf(file,"Li 6-311G** \n");
MPQCLib.c:	fprintf(file,"Li 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"Li 6-311++G** \n");
MPQCLib.c:	fprintf(file,"Li 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"Li 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Li cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Be STO-2G \n");
MPQCLib.c:	fprintf(file,"Be STO-3G \n");
MPQCLib.c:	fprintf(file,"Be STO-3G* \n");
MPQCLib.c:	fprintf(file,"Be STO-6G \n");
MPQCLib.c:	fprintf(file,"Be 3-21G \n");
MPQCLib.c:	fprintf(file,"Be 3-21G* \n");
MPQCLib.c:	fprintf(file,"Be 3-21++G \n");
MPQCLib.c:	fprintf(file,"Be 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Be 4-31G \n");
MPQCLib.c:	fprintf(file,"Be 4-31G* \n");
MPQCLib.c:	fprintf(file,"Be 4-31G** \n");
MPQCLib.c:	fprintf(file,"Be 6-31G \n");
MPQCLib.c:	fprintf(file,"Be 6-31G* \n");
MPQCLib.c:	fprintf(file,"Be 6-31G** \n");
MPQCLib.c:	fprintf(file,"Be 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Be 6-31++G \n");
MPQCLib.c:	fprintf(file,"Be 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Be 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Be 6-311G \n");
MPQCLib.c:	fprintf(file,"Be 6-311G* \n");
MPQCLib.c:	fprintf(file,"Be 6-311G** \n");
MPQCLib.c:	fprintf(file,"Be 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"Be 6-311++G** \n");
MPQCLib.c:	fprintf(file,"Be 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"Be 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Be cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"B STO-2G \n");
MPQCLib.c:	fprintf(file,"B STO-3G \n");
MPQCLib.c:	fprintf(file,"B STO-3G* \n");
MPQCLib.c:	fprintf(file,"B 3-21G \n");
MPQCLib.c:	fprintf(file,"B 3-21G* \n");
MPQCLib.c:	fprintf(file,"B 3-21++G \n");
MPQCLib.c:	fprintf(file,"B 3-21++G* \n");
MPQCLib.c:	fprintf(file,"B 4-31G \n");
MPQCLib.c:	fprintf(file,"B 4-31G* \n");
MPQCLib.c:	fprintf(file,"B 4-31G** \n");
MPQCLib.c:	fprintf(file,"B 6-31G \n");
MPQCLib.c:	fprintf(file,"B 6-31G* \n");
MPQCLib.c:	fprintf(file,"B 6-31G** \n");
MPQCLib.c:	fprintf(file,"B 6-31+G* \n");
MPQCLib.c:	fprintf(file,"B 6-31++G \n");
MPQCLib.c:	fprintf(file,"B 6-31++G* \n");
MPQCLib.c:	fprintf(file,"B 6-31++G** \n");
MPQCLib.c:	fprintf(file,"B 6-311G \n");
MPQCLib.c:	fprintf(file,"B 6-311G* \n");
MPQCLib.c:	fprintf(file,"B 6-311G** \n");
MPQCLib.c:	fprintf(file,"B 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"B 6-311++G** \n");
MPQCLib.c:	fprintf(file,"B 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"B 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"B cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"B cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"B cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"B cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"B cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"B cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"B cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"B cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"B aug-cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"C STO-2G \n");
MPQCLib.c:	fprintf(file,"C STO-3G \n");
MPQCLib.c:	fprintf(file,"C STO-3G* \n");
MPQCLib.c:	fprintf(file,"C STO-6G \n");
MPQCLib.c:	fprintf(file,"C 3-21G \n");
MPQCLib.c:	fprintf(file,"C 3-21G* \n");
MPQCLib.c:	fprintf(file,"C 3-21++G \n");
MPQCLib.c:	fprintf(file,"C 3-21++G* \n");
MPQCLib.c:	fprintf(file,"C 4-31G \n");
MPQCLib.c:	fprintf(file,"C 4-31G* \n");
MPQCLib.c:	fprintf(file,"C 4-31G** \n");
MPQCLib.c:	fprintf(file,"C 6-31G \n");
MPQCLib.c:	fprintf(file,"C 6-31G* \n");
MPQCLib.c:	fprintf(file,"C 6-31G** \n");
MPQCLib.c:	fprintf(file,"C 6-31+G* \n");
MPQCLib.c:	fprintf(file,"C 6-31++G \n");
MPQCLib.c:	fprintf(file,"C 6-31++G* \n");
MPQCLib.c:	fprintf(file,"C 6-31++G** \n");
MPQCLib.c:	fprintf(file,"C 6-311G \n");
MPQCLib.c:	fprintf(file,"C 6-311G* \n");
MPQCLib.c:	fprintf(file,"C 6-311G** \n");
MPQCLib.c:	fprintf(file,"C 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"C 6-311++G** \n");
MPQCLib.c:	fprintf(file,"C 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"C 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"C cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"C cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"C cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"C cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"C cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"C cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"C cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"C cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"C aug-cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"N STO-2G \n");
MPQCLib.c:	fprintf(file,"N STO-3G \n");
MPQCLib.c:	fprintf(file,"N STO-3G* \n");
MPQCLib.c:	fprintf(file,"N STO-6G \n");
MPQCLib.c:	fprintf(file,"N 3-21G \n");
MPQCLib.c:	fprintf(file,"N 3-21G* \n");
MPQCLib.c:	fprintf(file,"N 3-21++G \n");
MPQCLib.c:	fprintf(file,"N 3-21++G* \n");
MPQCLib.c:	fprintf(file,"N 4-31G \n");
MPQCLib.c:	fprintf(file,"N 4-31G* \n");
MPQCLib.c:	fprintf(file,"N 4-31G** \n");
MPQCLib.c:	fprintf(file,"N 6-31G \n");
MPQCLib.c:	fprintf(file,"N 6-31G* \n");
MPQCLib.c:	fprintf(file,"N 6-31G** \n");
MPQCLib.c:	fprintf(file,"N 6-31+G* \n");
MPQCLib.c:	fprintf(file,"N 6-31++G \n");
MPQCLib.c:	fprintf(file,"N 6-31++G* \n");
MPQCLib.c:	fprintf(file,"N 6-31++G** \n");
MPQCLib.c:	fprintf(file,"N 6-311G \n");
MPQCLib.c:	fprintf(file,"N 6-311G* \n");
MPQCLib.c:	fprintf(file,"N 6-311G** \n");
MPQCLib.c:	fprintf(file,"N 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"N 6-311++G** \n");
MPQCLib.c:	fprintf(file,"N 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"N 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"N cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"N cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"N cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"N cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"N cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"N cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"N cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"N cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"N aug-cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"O STO-2G \n");
MPQCLib.c:	fprintf(file,"O STO-3G \n");
MPQCLib.c:	fprintf(file,"O STO-3G* \n");
MPQCLib.c:	fprintf(file,"O STO-6G \n");
MPQCLib.c:	fprintf(file,"O 3-21G \n");
MPQCLib.c:	fprintf(file,"O 3-21G* \n");
MPQCLib.c:	fprintf(file,"O 3-21++G \n");
MPQCLib.c:	fprintf(file,"O 3-21++G* \n");
MPQCLib.c:	fprintf(file,"O 4-31G \n");
MPQCLib.c:	fprintf(file,"O 4-31G* \n");
MPQCLib.c:	fprintf(file,"O 4-31G** \n");
MPQCLib.c:	fprintf(file,"O 6-31G \n");
MPQCLib.c:	fprintf(file,"O 6-31G* \n");
MPQCLib.c:	fprintf(file,"O 6-31G** \n");
MPQCLib.c:	fprintf(file,"O 6-31+G* \n");
MPQCLib.c:	fprintf(file,"O 6-31++G \n");
MPQCLib.c:	fprintf(file,"O 6-31++G* \n");
MPQCLib.c:	fprintf(file,"O 6-31++G** \n");
MPQCLib.c:	fprintf(file,"O 6-311G \n");
MPQCLib.c:	fprintf(file,"O 6-311G* \n");
MPQCLib.c:	fprintf(file,"O 6-311G** \n");
MPQCLib.c:	fprintf(file,"O 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"O 6-311++G** \n");
MPQCLib.c:	fprintf(file,"O 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"O 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"O cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"O cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"O cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"O cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"O cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"O cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"O cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"O cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"O aug-cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"F STO-2G \n");
MPQCLib.c:	fprintf(file,"F STO-3G \n");
MPQCLib.c:	fprintf(file,"F STO-3G* \n");
MPQCLib.c:	fprintf(file,"F STO-6G \n");
MPQCLib.c:	fprintf(file,"F 3-21G \n");
MPQCLib.c:	fprintf(file,"F 3-21G* \n");
MPQCLib.c:	fprintf(file,"F 3-21++G \n");
MPQCLib.c:	fprintf(file,"F 3-21++G* \n");
MPQCLib.c:	fprintf(file,"F 4-31G \n");
MPQCLib.c:	fprintf(file,"F 4-31G* \n");
MPQCLib.c:	fprintf(file,"F 4-31G** \n");
MPQCLib.c:	fprintf(file,"F 6-31G \n");
MPQCLib.c:	fprintf(file,"F 6-31G* \n");
MPQCLib.c:	fprintf(file,"F 6-31G** \n");
MPQCLib.c:	fprintf(file,"F 6-31+G* \n");
MPQCLib.c:	fprintf(file,"F 6-31++G \n");
MPQCLib.c:	fprintf(file,"F 6-31++G* \n");
MPQCLib.c:	fprintf(file,"F 6-31++G** \n");
MPQCLib.c:	fprintf(file,"F 6-311G \n");
MPQCLib.c:	fprintf(file,"F 6-311G* \n");
MPQCLib.c:	fprintf(file,"F 6-311G** \n");
MPQCLib.c:	fprintf(file,"F 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"F 6-311++G** \n");
MPQCLib.c:	fprintf(file,"F 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"F 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"F cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"F cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"F cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"F cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"F cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"F cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"F cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"F cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"F aug-cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"Ne STO-2G \n");
MPQCLib.c:	fprintf(file,"Ne STO-3G \n");
MPQCLib.c:	fprintf(file,"Ne STO-3G* \n");
MPQCLib.c:	fprintf(file,"Ne STO-6G \n");
MPQCLib.c:	fprintf(file,"Ne 3-21G \n");
MPQCLib.c:	fprintf(file,"Ne 3-21G* \n");
MPQCLib.c:	fprintf(file,"Ne 3-21++G \n");
MPQCLib.c:	fprintf(file,"Ne 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Ne 4-31G \n");
MPQCLib.c:	fprintf(file,"Ne 4-31G* \n");
MPQCLib.c:	fprintf(file,"Ne 4-31G** \n");
MPQCLib.c:	fprintf(file,"Ne 6-31G \n");
MPQCLib.c:	fprintf(file,"Ne 6-31G* \n");
MPQCLib.c:	fprintf(file,"Ne 6-31G** \n");
MPQCLib.c:	fprintf(file,"Ne 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Ne 6-31++G \n");
MPQCLib.c:	fprintf(file,"Ne 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Ne 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Ne 6-311G \n");
MPQCLib.c:	fprintf(file,"Ne 6-311G* \n");
MPQCLib.c:	fprintf(file,"Ne 6-311G** \n");
MPQCLib.c:	fprintf(file,"Ne 6-311G(2df,2pd) \n");
MPQCLib.c:	fprintf(file,"Ne 6-311++G** \n");
MPQCLib.c:	fprintf(file,"Ne 6-311++G(2d,2p) \n");
MPQCLib.c:	fprintf(file,"Ne 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Ne cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Ne cc-pCVDZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"Ne cc-pCV5Z \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pCVTZ \n");
MPQCLib.c:	fprintf(file,"Ne aug-cc-pCVQZ \n");
MPQCLib.c:	fprintf(file,"Na STO-2G \n");
MPQCLib.c:	fprintf(file,"Na STO-3G \n");
MPQCLib.c:	fprintf(file,"Na STO-3G* \n");
MPQCLib.c:	fprintf(file,"Na STO-6G \n");
MPQCLib.c:	fprintf(file,"Na 3-21G \n");
MPQCLib.c:	fprintf(file,"Na 3-21G* \n");
MPQCLib.c:	fprintf(file,"Na 3-21++G \n");
MPQCLib.c:	fprintf(file,"Na 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Na 6-31G \n");
MPQCLib.c:	fprintf(file,"Na 6-31G* \n");
MPQCLib.c:	fprintf(file,"Na 6-31G** \n");
MPQCLib.c:	fprintf(file,"Na 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Na 6-31++G \n");
MPQCLib.c:	fprintf(file,"Na 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Na 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Na 6-311G \n");
MPQCLib.c:	fprintf(file,"Na 6-311G* \n");
MPQCLib.c:	fprintf(file,"Na 6-311G** \n");
MPQCLib.c:	fprintf(file,"Na 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Mg STO-2G \n");
MPQCLib.c:	fprintf(file,"Mg STO-3G \n");
MPQCLib.c:	fprintf(file,"Mg STO-3G* \n");
MPQCLib.c:	fprintf(file,"Mg STO-6G \n");
MPQCLib.c:	fprintf(file,"Mg 3-21G \n");
MPQCLib.c:	fprintf(file,"Mg 3-21G* \n");
MPQCLib.c:	fprintf(file,"Mg 3-21++G \n");
MPQCLib.c:	fprintf(file,"Mg 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Mg 6-31G \n");
MPQCLib.c:	fprintf(file,"Mg 6-31G* \n");
MPQCLib.c:	fprintf(file,"Mg 6-31G** \n");
MPQCLib.c:	fprintf(file,"Mg 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Mg 6-31++G \n");
MPQCLib.c:	fprintf(file,"Mg 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Mg 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Mg 6-311G \n");
MPQCLib.c:	fprintf(file,"Mg 6-311G* \n");
MPQCLib.c:	fprintf(file,"Mg 6-311G** \n");
MPQCLib.c:	fprintf(file,"Mg 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Al STO-2G \n");
MPQCLib.c:	fprintf(file,"Al STO-3G \n");
MPQCLib.c:	fprintf(file,"Al STO-3G* \n");
MPQCLib.c:	fprintf(file,"Al STO-6G \n");
MPQCLib.c:	fprintf(file,"Al 3-21G \n");
MPQCLib.c:	fprintf(file,"Al 3-21G* \n");
MPQCLib.c:	fprintf(file,"Al 3-21++G \n");
MPQCLib.c:	fprintf(file,"Al 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Al 6-31G \n");
MPQCLib.c:	fprintf(file,"Al 6-31G* \n");
MPQCLib.c:	fprintf(file,"Al 6-31G** \n");
MPQCLib.c:	fprintf(file,"Al 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Al 6-31++G \n");
MPQCLib.c:	fprintf(file,"Al 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Al 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Al 6-311G \n");
MPQCLib.c:	fprintf(file,"Al 6-311G* \n");
MPQCLib.c:	fprintf(file,"Al 6-311G** \n");
MPQCLib.c:	fprintf(file,"Al 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Al cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Al cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Al cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Al cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Al aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Al aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Al aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Al aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Si STO-2G \n");
MPQCLib.c:	fprintf(file,"Si STO-3G \n");
MPQCLib.c:	fprintf(file,"Si STO-3G* \n");
MPQCLib.c:	fprintf(file,"Si STO-6G \n");
MPQCLib.c:	fprintf(file,"Si 3-21G \n");
MPQCLib.c:	fprintf(file,"Si 3-21G* \n");
MPQCLib.c:	fprintf(file,"Si 3-21++G \n");
MPQCLib.c:	fprintf(file,"Si 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Si 6-31G \n");
MPQCLib.c:	fprintf(file,"Si 6-31G* \n");
MPQCLib.c:	fprintf(file,"Si 6-31G** \n");
MPQCLib.c:	fprintf(file,"Si 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Si 6-31++G \n");
MPQCLib.c:	fprintf(file,"Si 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Si 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Si 6-311G \n");
MPQCLib.c:	fprintf(file,"Si 6-311G* \n");
MPQCLib.c:	fprintf(file,"Si 6-311G** \n");
MPQCLib.c:	fprintf(file,"Si 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Si cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Si cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Si cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Si cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Si aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Si aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Si aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Si aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"P STO-2G \n");
MPQCLib.c:	fprintf(file,"P STO-3G \n");
MPQCLib.c:	fprintf(file,"P STO-3G* \n");
MPQCLib.c:	fprintf(file,"P STO-6G \n");
MPQCLib.c:	fprintf(file,"P 3-21G \n");
MPQCLib.c:	fprintf(file,"P 3-21G* \n");
MPQCLib.c:	fprintf(file,"P 3-21++G \n");
MPQCLib.c:	fprintf(file,"P 3-21++G* \n");
MPQCLib.c:	fprintf(file,"P 4-31G \n");
MPQCLib.c:	fprintf(file,"P 4-31G* \n");
MPQCLib.c:	fprintf(file,"P 4-31G** \n");
MPQCLib.c:	fprintf(file,"P 6-31G \n");
MPQCLib.c:	fprintf(file,"P 6-31G* \n");
MPQCLib.c:	fprintf(file,"P 6-31G** \n");
MPQCLib.c:	fprintf(file,"P 6-31+G* \n");
MPQCLib.c:	fprintf(file,"P 6-31++G \n");
MPQCLib.c:	fprintf(file,"P 6-31++G* \n");
MPQCLib.c:	fprintf(file,"P 6-31++G** \n");
MPQCLib.c:	fprintf(file,"P 6-311G \n");
MPQCLib.c:	fprintf(file,"P 6-311G* \n");
MPQCLib.c:	fprintf(file,"P 6-311G** \n");
MPQCLib.c:	fprintf(file,"P 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"P cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"P cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"P cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"P cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"P aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"P aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"P aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"P aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"S STO-2G \n");
MPQCLib.c:	fprintf(file,"S STO-3G \n");
MPQCLib.c:	fprintf(file,"S STO-3G* \n");
MPQCLib.c:	fprintf(file,"S STO-6G \n");
MPQCLib.c:	fprintf(file,"S 3-21G \n");
MPQCLib.c:	fprintf(file,"S 3-21G* \n");
MPQCLib.c:	fprintf(file,"S 3-21++G \n");
MPQCLib.c:	fprintf(file,"S 3-21++G* \n");
MPQCLib.c:	fprintf(file,"S 4-31G \n");
MPQCLib.c:	fprintf(file,"S 4-31G* \n");
MPQCLib.c:	fprintf(file,"S 4-31G** \n");
MPQCLib.c:	fprintf(file,"S 6-31G \n");
MPQCLib.c:	fprintf(file,"S 6-31G* \n");
MPQCLib.c:	fprintf(file,"S 6-31G** \n");
MPQCLib.c:	fprintf(file,"S 6-31+G* \n");
MPQCLib.c:	fprintf(file,"S 6-31++G \n");
MPQCLib.c:	fprintf(file,"S 6-31++G* \n");
MPQCLib.c:	fprintf(file,"S 6-31++G** \n");
MPQCLib.c:	fprintf(file,"S 6-311G \n");
MPQCLib.c:	fprintf(file,"S 6-311G* \n");
MPQCLib.c:	fprintf(file,"S 6-311G** \n");
MPQCLib.c:	fprintf(file,"S 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"S cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"S cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"S cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"S cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"S aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"S aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"S aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"S aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Cl STO-2G \n");
MPQCLib.c:	fprintf(file,"Cl STO-3G \n");
MPQCLib.c:	fprintf(file,"Cl STO-3G* \n");
MPQCLib.c:	fprintf(file,"Cl STO-6G \n");
MPQCLib.c:	fprintf(file,"Cl 3-21G \n");
MPQCLib.c:	fprintf(file,"Cl 3-21G* \n");
MPQCLib.c:	fprintf(file,"Cl 3-21++G \n");
MPQCLib.c:	fprintf(file,"Cl 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Cl 4-31G \n");
MPQCLib.c:	fprintf(file,"Cl 4-31G* \n");
MPQCLib.c:	fprintf(file,"Cl 4-31G** \n");
MPQCLib.c:	fprintf(file,"Cl 6-31G \n");
MPQCLib.c:	fprintf(file,"Cl 6-31G* \n");
MPQCLib.c:	fprintf(file,"Cl 6-31G** \n");
MPQCLib.c:	fprintf(file,"Cl 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Cl 6-31++G \n");
MPQCLib.c:	fprintf(file,"Cl 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Cl 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Cl 6-311G \n");
MPQCLib.c:	fprintf(file,"Cl 6-311G* \n");
MPQCLib.c:	fprintf(file,"Cl 6-311G** \n");
MPQCLib.c:	fprintf(file,"Cl 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Cl cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Cl cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Cl cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Cl cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Cl aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Cl aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Cl aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Cl aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Ar STO-2G \n");
MPQCLib.c:	fprintf(file,"Ar STO-3G \n");
MPQCLib.c:	fprintf(file,"Ar STO-3G* \n");
MPQCLib.c:	fprintf(file,"Ar STO-6G \n");
MPQCLib.c:	fprintf(file,"Ar 3-21G \n");
MPQCLib.c:	fprintf(file,"Ar 3-21G* \n");
MPQCLib.c:	fprintf(file,"Ar 3-21++G \n");
MPQCLib.c:	fprintf(file,"Ar 3-21++G* \n");
MPQCLib.c:	fprintf(file,"Ar 6-31G \n");
MPQCLib.c:	fprintf(file,"Ar 6-31G* \n");
MPQCLib.c:	fprintf(file,"Ar 6-31G** \n");
MPQCLib.c:	fprintf(file,"Ar 6-31+G* \n");
MPQCLib.c:	fprintf(file,"Ar 6-31++G \n");
MPQCLib.c:	fprintf(file,"Ar 6-31++G* \n");
MPQCLib.c:	fprintf(file,"Ar 6-31++G** \n");
MPQCLib.c:	fprintf(file,"Ar 6-311G \n");
MPQCLib.c:	fprintf(file,"Ar 6-311G* \n");
MPQCLib.c:	fprintf(file,"Ar 6-311G** \n");
MPQCLib.c:	fprintf(file,"Ar 6-311++G(3df,3pd) \n");
MPQCLib.c:	fprintf(file,"Ar cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ar cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Ar cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Ar cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"Ar aug-cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ar aug-cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Ar aug-cc-pVQZ \n");
MPQCLib.c:	fprintf(file,"Ar aug-cc-pV5Z \n");
MPQCLib.c:	fprintf(file,"K STO-2G \n");
MPQCLib.c:	fprintf(file,"K STO-3G \n");
MPQCLib.c:	fprintf(file,"K STO-6G \n");
MPQCLib.c:	fprintf(file,"K 3-21G \n");
MPQCLib.c:	fprintf(file,"Ca STO-2G \n");
MPQCLib.c:	fprintf(file,"Ca STO-3G \n");
MPQCLib.c:	fprintf(file,"Ca STO-6G \n");
MPQCLib.c:	fprintf(file,"Ca 3-21G \n");
MPQCLib.c:	fprintf(file,"Sc STO-3G \n");
MPQCLib.c:	fprintf(file,"Sc STO-6G \n");
MPQCLib.c:	fprintf(file,"Sc 3-21G \n");
MPQCLib.c:	fprintf(file,"Ti STO-3G \n");
MPQCLib.c:	fprintf(file,"Ti STO-6G \n");
MPQCLib.c:	fprintf(file,"Ti 3-21G \n");
MPQCLib.c:	fprintf(file,"V STO-3G \n");
MPQCLib.c:	fprintf(file,"V STO-6G \n");
MPQCLib.c:	fprintf(file,"V 3-21G \n");
MPQCLib.c:	fprintf(file,"Cr STO-3G \n");
MPQCLib.c:	fprintf(file,"Cr STO-6G \n");
MPQCLib.c:	fprintf(file,"Cr 3-21G \n");
MPQCLib.c:	fprintf(file,"Mn STO-3G \n");
MPQCLib.c:	fprintf(file,"Mn STO-6G \n");
MPQCLib.c:	fprintf(file,"Mn 3-21G \n");
MPQCLib.c:	fprintf(file,"Fe STO-3G \n");
MPQCLib.c:	fprintf(file,"Fe STO-6G \n");
MPQCLib.c:	fprintf(file,"Fe 3-21G \n");
MPQCLib.c:	fprintf(file,"Co STO-3G \n");
MPQCLib.c:	fprintf(file,"Co STO-6G \n");
MPQCLib.c:	fprintf(file,"Co 3-21G \n");
MPQCLib.c:	fprintf(file,"Ni STO-3G \n");
MPQCLib.c:	fprintf(file,"Ni STO-6G \n");
MPQCLib.c:	fprintf(file,"Ni 3-21G \n");
MPQCLib.c:	fprintf(file,"Cu STO-3G \n");
MPQCLib.c:	fprintf(file,"Cu STO-6G \n");
MPQCLib.c:	fprintf(file,"Cu 3-21G \n");
MPQCLib.c:	fprintf(file,"Zn STO-3G \n");
MPQCLib.c:	fprintf(file,"Zn STO-6G \n");
MPQCLib.c:	fprintf(file,"Zn 3-21G \n");
MPQCLib.c:	fprintf(file,"Ga STO-3G \n");
MPQCLib.c:	fprintf(file,"Ga STO-6G \n");
MPQCLib.c:	fprintf(file,"Ga 3-21G \n");
MPQCLib.c:	fprintf(file,"Ga 6-311G \n");
MPQCLib.c:	fprintf(file,"Ga 6-311G* \n");
MPQCLib.c:	fprintf(file,"Ga 6-311G** \n");
MPQCLib.c:	fprintf(file,"Ga cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ga cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Ge STO-3G \n");
MPQCLib.c:	fprintf(file,"Ge STO-6G \n");
MPQCLib.c:	fprintf(file,"Ge 3-21G \n");
MPQCLib.c:	fprintf(file,"Ge 6-311G \n");
MPQCLib.c:	fprintf(file,"Ge 6-311G* \n");
MPQCLib.c:	fprintf(file,"Ge 6-311G** \n");
MPQCLib.c:	fprintf(file,"Ge cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Ge cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"As STO-3G \n");
MPQCLib.c:	fprintf(file,"As STO-6G \n");
MPQCLib.c:	fprintf(file,"As 3-21G \n");
MPQCLib.c:	fprintf(file,"As 6-311G \n");
MPQCLib.c:	fprintf(file,"As 6-311G* \n");
MPQCLib.c:	fprintf(file,"As 6-311G** \n");
MPQCLib.c:	fprintf(file,"As cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"As cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Se STO-3G \n");
MPQCLib.c:	fprintf(file,"Se STO-6G \n");
MPQCLib.c:	fprintf(file,"Se 3-21G \n");
MPQCLib.c:	fprintf(file,"Se 6-311G \n");
MPQCLib.c:	fprintf(file,"Se 6-311G* \n");
MPQCLib.c:	fprintf(file,"Se 6-311G** \n");
MPQCLib.c:	fprintf(file,"Se cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Se cc-pVTZ \n");
MPQCLib.c:	fprintf(file,"Br STO-3G \n");
MPQCLib.c:	fprintf(file,"Br STO-6G \n");
MPQCLib.c:	fprintf(file,"Br 3-21G \n");
MPQCLib.c:	fprintf(file,"Br 6-311G \n");
MPQCLib.c:	fprintf(file,"Br 6-311G* \n");
MPQCLib.c:	fprintf(file,"Br 6-311G** \n");
MPQCLib.c:	fprintf(file,"Br cc-pVDZ \n");
MPQCLib.c:	fprintf(file,"Kr STO-3G \n");
MPQCLib.c:	fprintf(file,"Kr STO-6G \n");
MPQCLib.c:	fprintf(file,"Kr 3-21G \n");
MPQCLib.c:	fprintf(file,"Kr 6-311G \n");
MPQCLib.c:	fprintf(file,"Kr 6-311G* \n");
MPQCLib.c:	fprintf(file,"Kr 6-311G** \n");
MPQCLib.c:	fprintf(file,"Kr cc-pVDZ \n");
MPQCMole.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCMole.c:	mpqcMole.auxBasisName = g_strdup("STO-3G");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Closed Shell Hartree-Fock");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Restricted Open Shell Hartree-Fock");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Closed Shell Kohn-Sham");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Restricted Open Shell Kohn-Sham ");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Unrestricted Hartree-Fock");
MPQCMole.c:  		glistLabel = g_list_append(glistLabel,"Unrestricted Kohn-Sham ");
MPQCMole.c:		if(strcmp((gchar*)glistM->data,method)==0)
MPQCMole.c:			gtk_label_set_text(GTK_LABEL(labelMethod),(gchar*)glistL->data);
MPQCMole.c:		glistM = glistM->next;
MPQCMole.c:		glistL = glistL->next;
MPQCMole.c:		entryFunctional=GTK_COMBO(wid)->entry;
MPQCMole.c:	gint ne = mpqcMolecule.numberOfValenceElectrons - mpqcMole.totalCharge;
MPQCMole.c:	nlist = mpqcMolecule.numberOfValenceElectrons*2-2+1;
MPQCMole.c:	for(i=1;i<nlist-1;i+=2)
MPQCMole.c:		sprintf(list[i+1],"%d",-k);
MPQCMole.c:		gint ne = mpqcMolecule.numberOfValenceElectrons - mpqcMole.totalCharge;
MPQCMole.c:	combo = create_combo(list, nlist, TRUE, -1, -1);
MPQCMole.c:	entry = GTK_COMBO (combo)->entry;
MPQCMole.c:	gtk_widget_set_usize(GTK_WIDGET(entry),(gint)(ScreenHeight*0.2),-1);
MPQCMole.c:	entrySpinMultiplicity  = GTK_COMBO (comboSpinMultiplicity)->entry;
MPQCMole.c:	if(GTK_IS_COMBO(comboMethod)) entryMethod = GTK_COMBO(comboMethod)->entry;
MPQCMole.c:		gtk_object_set_data (GTK_OBJECT (GTK_COMBO(comboCharge)->entry), "ComboSpinMultiplicity", comboSpinMultiplicity);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        		gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:		gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:		gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:       	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:       	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:       	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCMole.c:	gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:       	gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:	gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        		gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        		gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        		gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMole.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMole.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCMolecule.c:/* 0-> Witout symmetry ; 
MPQCMolecule.c: * 1-> auto symmetry
MPQCMolecule.c: * 2-> with Gabedit symmetry
MPQCMolecule.c:	if(mpqcMolecule.listOfAtoms==NULL) return -1;
MPQCMolecule.c:		atomList->position[0]  = X[n];
MPQCMolecule.c:		atomList->position[1]  = Y[n];
MPQCMolecule.c:		atomList->position[2]  = Z[n];
MPQCMolecule.c:		atomList->symbol  = g_strdup(symbols[n]);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, "molecule<Molecule>:(\n",-1);
MPQCMolecule.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, ")\n",-1);
MPQCMolecule.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMolecule.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer,-1);
MPQCMpqc.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCMpqc.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCMpqc.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCMpqc.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:Copyright (c) 2002 Abdul-Rahman Allouche. All rights reserved
MPQCOptimisation.c:	combo = create_combo(list, nlist, TRUE, -1, -1);
MPQCOptimisation.c:	entry = GTK_COMBO (combo)->entry;
MPQCOptimisation.c:	entryMaxIterations = GTK_COMBO(comboMaxIterations)->entry;
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        	gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL,"\t", -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, &mpqcColorFore.keyWord, &mpqcColorBack.keyWord, buffer, -1);
MPQCOptimisation.c:	sprintf(buffer,"%c----------------------------------------------------------------\n",'%');
MPQCOptimisation.c:        gtk_text_insert (GTK_TEXT(text), NULL, NULL, NULL, buffer, -1);
